{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,iHAUA,IAAIC,EAAUC,EAAUC,EAAWC,EAAYC,EAAQC,EAAQC,EAC3DC,EAAQC,EAAiBC,EACzBC,EACJ,MAAMC,EAAS,CAEdC,UAAW,CACVC,MAAO,UACPC,SAAU,UACVC,kBAAmB,EACnBC,UAAW,GACXC,UAAW,GACXC,IAAK,MACLC,aAAc,EACdC,QAAS,EACTC,OAAO,EACPC,YAAY,GAEbC,UAAW,CACVV,MAAO,UACPC,SAAU,UACVC,kBAAmB,EACnBC,UAAW,GACXC,UAAW,GACXE,aAAc,EACdD,IAAK,MACLE,QAAS,EACTC,OAAO,EACPC,YAAY,GAEbE,UAAW,CACVX,MAAO,UACPG,UAAW,IACXC,UAAW,IACXI,OAAO,EACPC,YAAY,GAGbG,4BAA4B,EAC5BC,aAAa,EACbC,qBAAsB,EACtBC,oBAAqB,EACrBC,gBAAiB,EACjBC,eAAgB,IAChBC,QAAS,EACTC,gBAAiB,EACjBC,iBAAiB,EACjBC,gBAAiB,EAAIC,OAAOC,iBAC5BC,sBAAuB,GACvBC,mBAAoB,GACpBC,MAAO,EACPC,gBAAiB,EACjBC,0BAA0B,GAItBN,OAAOO,SAASC,KAAKC,SAAU,kBAEnCjC,EAAOC,UAAUK,UAAY,EAC7BN,EAAOC,UAAUI,UAAY,IAC7BL,EAAOC,UAAUO,aAAe,EAChCR,EAAOC,UAAUC,MAAQ,UACzBF,EAAOoB,QAAU,IAgTlB,SAASc,IAER,MAAMC,EAAIX,OAAOY,WACXC,EAAIb,OAAOc,YACXC,EAAQvC,EAAOuB,gBACfiB,EAAMhB,OAAOC,iBAEnBjC,EAAWiD,QAASN,EAAII,EAAQC,EAAKH,EAAIE,EAAQC,GACjDhD,EAAWkD,QAEXrD,EAASoD,QAASN,EAAGE,GACrBhD,EAASsD,cAAenB,OAAOC,iBAAmBc,GAClD9C,EAAOmD,OAAST,EAAIE,EACpB5C,EAAOoD,yBAIR,SAASC,IAERtD,EAAWkD,QAIZ,SAASK,IAER,MAAMC,EAAanD,EAAgBoD,SAAUrD,EAAQI,EAAOkB,iBAC5D1B,EAAW0D,SAASC,WAAWC,WAAYJ,GAC3ClD,EAAMuD,YAAcL,EACpBxD,EAAWkD,QAIZ,SAASY,IAERC,sBAAuBD,GAEvB,MAAME,EAAK7D,EAAW,GACtB6D,EAAGtD,MAAMuD,IAAKzD,EAAOC,UAAUC,OAAQwD,sBACvCF,EAAGrD,SAASsD,IAAKzD,EAAOC,UAAUE,UAAWuD,sBAC7CF,EAAGpD,kBAAoBJ,EAAOC,UAAUG,kBACxCoD,EAAGlD,UAAYN,EAAOC,UAAUK,UAChCkD,EAAGnD,UAAYL,EAAOC,UAAUI,UAChCmD,EAAGhD,aAAeR,EAAOC,UAAUO,aACnCgD,EAAGjD,IAAMP,EAAOC,UAAUM,IAC1BiD,EAAG/C,QAAUT,EAAOC,UAAUQ,QAE9B,MAAMkD,EAAKhE,EAAW,GACtBgE,EAAGzD,MAAMuD,IAAKzD,EAAOY,UAAUV,OAAQwD,sBACvCC,EAAGxD,SAASsD,IAAKzD,EAAOY,UAAUT,UAAWuD,sBAC7CC,EAAGvD,kBAAoBJ,EAAOY,UAAUR,kBACxCuD,EAAGrD,UAAYN,EAAOY,UAAUN,UAChCqD,EAAGtD,UAAYL,EAAOY,UAAUP,UAChCsD,EAAGnD,aAAeR,EAAOY,UAAUJ,aACnCmD,EAAGpD,IAAMP,EAAOY,UAAUL,IAC1BoD,EAAGlD,QAAUT,EAAOY,UAAUH,QAE9B,MAAMmD,EAAKjE,EAAW,GACtBiE,EAAG1D,MAAMuD,IAAKzD,EAAOa,UAAUX,OAAQwD,sBACvCE,EAAGtD,UAAYN,EAAOa,UAAUP,UAChCsD,EAAGvD,UAAYL,EAAOa,UAAUR,UAEhCb,EAAW0D,SAASW,UAAUT,WAAY7D,EAAUsE,UAAWtE,EAAUuE,UACzEtE,EAAW0D,SAASW,UAAUE,SAAU,EAAG/D,EAAOC,UAAUS,OAC5DlB,EAAW0D,SAASW,UAAUE,SAAU,EAAG/D,EAAOY,UAAUF,OAC5DlB,EAAW0D,SAASW,UAAUE,SAAU,EAAG/D,EAAOa,UAAUH,OAC5DlB,EAAW0D,SAASW,UAAUG,cAAe,EAAGhE,EAAOC,UAAUU,YACjEnB,EAAW0D,SAASW,UAAUG,cAAe,EAAGhE,EAAOY,UAAUD,YACjEnB,EAAW0D,SAASW,UAAUG,cAAe,EAAGhE,EAAOa,UAAUF,YAEjEnB,EAAW0D,SAASvB,mBAAqB3B,EAAO2B,mBAChDnC,EAAW0D,SAASlC,qBAAuBhB,EAAOgB,qBAClDxB,EAAW0D,SAAS/B,eAAiBnB,EAAOmB,eAC5C3B,EAAW0D,SAAS9B,QAAUpB,EAAOoB,QACrC5B,EAAW0D,SAASrB,gBAAkB7B,EAAO6B,gBAC7CrC,EAAW0D,SAASe,eAAeb,WAAY3D,GAE/CA,EAAOyE,oBAEFlE,EAAO6B,gBAAkB,EAE7B/B,EAAMqE,WAAa,KAInBrE,EAAMqE,WAAarE,EAAMuD,YAI1B,IAAM,IAAIe,EAAI,EAAGC,EAAIrE,EAAOqB,gBAAiB+C,EAAIC,EAAGD,IAEnD5E,EAAW8E,SAIP9E,EAAW+E,QAAU,GAEzBlF,EAASmF,OAAQ1E,EAAOL,GAIzBJ,EAASoF,WAAY,EACrB/E,EAAOwD,SAASwB,IAAMlF,EAAWmF,OAAOC,QACxClF,EAAO8E,OAAQnF,GACfA,EAASoF,WAAY,EAErB1E,EAAU8E,UAAY,YAAaC,KAAKC,MAAOvF,EAAW+E,WApZvC/C,OAAOY,WAAaZ,OAAOc,YAC5B,MAElBtC,EAAOoB,QAAU0D,KAAKE,IAAKhF,EAAOoB,QAAS,GAC3CpB,EAAOuB,iBAAmB,GAC1BvB,EAAO4B,MAAQ,EACf5B,EAAOc,4BAA6B,EACpCd,EAAOkB,gBAAkB,KAM1B+D,iBAEC5F,EAAW,IAAIF,EAAA+F,cAAqB,CAAEC,WAAW,IACjD9F,EAAS+F,YAAcjG,EAAAkG,sBACvBhG,EAASiG,cAAe,EAAG,GAC3BC,SAASC,KAAKC,YAAapG,EAASqG,YAEpCjG,EAAS,IAAIkG,EAAAC,eAAgB,GAAIpE,OAAOY,WAAaZ,OAAOc,YAAa,KAAO,KAChF7C,EAAOoG,SAASpC,KAAK,EAAK,EAAG,GAE7BjE,EAAa,IAAImG,EAAAG,oBAAqBzG,GACtCG,EAAWuG,OAAQ,EACnBvG,EAAWwG,OAASvG,EACpBD,EAAW0D,SAAW,IAAIyC,EAAAM,4BAC1BzG,EAAW0D,SAASgD,UAAW,yBAA0BlG,EAAO0B,uBAChElC,EAAW0D,SAASgD,UAAW,cAAeC,OAAQnG,EAAOc,6BAC7DtB,EAAWoC,MAAM6B,IAAKzD,EAAO4B,MAAO5B,EAAO4B,OAE3ClC,EAAS,IAAI0G,EAAAC,eAAgB,IAAIlH,EAAAmH,kBAAyB,CACzD5B,IAAKlF,EAAWmF,OAAOC,QACvB2B,SAAUpH,EAAAqH,kBAGXlH,EAAW,IAAImH,EAAAC,cAAejH,EAAQJ,EAASqG,YAC/CpG,EAASqH,iBAAkB,UAAU,KAEpCnH,EAAWkD,WAIZ5C,EAAQ,IAAIX,EAAAyH,MAEZ7G,EAAYwF,SAASsB,eAAgB,WAErChH,EAAkB,IAAI8F,EAAAmB,uBAAwBzH,GAE9C,MAAM0H,EAAgB,IAAIC,SAASC,KAElC,IAAIC,EAAAC,YACFC,KAAM,kHAAkHxC,IAExHhF,EAASgF,EAET7B,IACAkE,UAMGI,EAAY,IAAIC,EAAAC,uBAChBC,GAAc,IAAIC,EAAAC,YACtBC,kBAAmBC,EAAAC,gBACnBC,UAAW,4GACXC,MAAMC,IAEN,MAAMC,EAAQ,IAAI9I,EAAA+I,MAElBF,EAAKG,MAAM5F,MAAM6F,UAAW,KAC5BJ,EAAKG,MAAMjE,oBACX+D,EAAMI,IAAKL,EAAKG,OAEhB,MAAMG,EAAM,IAAInJ,EAAAoJ,KAChBD,EAAIE,cAAeR,EAAKG,OAExB,MAAMpD,EAAQ,IAAI5F,EAAAsJ,KACjB,IAAItJ,EAAAuJ,uBAA8B,EAAG,EAAG,IAAM,KAC9C,IAAIvJ,EAAAwJ,qBAA4B,CAAEzI,MAAO,SAAUG,UAAW,EAAGC,UAAW,OAE7EyE,EAAM6D,SAAW7D,EAAM6D,SAASC,eAChC9D,EAAM6D,SAASE,cACf/D,EAAMc,SAASkD,EAAIT,EAAIU,IAAID,EAAI,IAC/Bd,EAAMI,IAAKtD,GAEX,MAAM9E,EAAY,IAAId,EAAAwJ,qBAChB/H,EAAY,IAAIzB,EAAAwJ,qBAgCtB,OA9BAX,EAAKG,MAAMc,UAAUC,IAIfA,EAAEN,UAENM,EAAEN,SAASO,uBAII,aAAXD,EAAEE,KAENF,EAAEhG,SAAWtC,EAIbsI,EAAEhG,SAAWjD,EAIE,gBAAXiJ,EAAEE,OAENF,EAAEhG,SAAWtC,MAMfjB,EAAY,CAAEM,EAAWW,EAAWmE,EAAM7B,UAEnCmE,EAAUpE,SAAUgF,MAG3BF,MAAMsB,IAEN9J,EAAY8J,EAEZvJ,EAAMuI,IAAKgB,EAAOlB,OAElB,MA7MHmB,IA6MWA,EA7MXxF,SA6MgBA,EA7MhBD,UA6M0BA,GAAcwF,EAC/BT,EAAWU,EAAIV,SACf1F,EAAW1D,EAAW0D,SAE5BA,EAASoG,IAAIlG,WAAYkG,GACzBpG,EAASqG,gBAAgBnG,WAAYwF,EAASY,WAAWC,QACzDvG,EAASwG,iBAAiBtG,WAAYwF,EAASY,WAAWG,SAC1DzG,EAAS0G,YAAYxG,WAAYwF,EAASY,WAAWK,IACrD3G,EAAS4G,uBAAuB1G,WAAYwF,EAASY,WAAWO,eAChE7G,EAASY,SAASkG,YAAa3K,EAAU,KAAM,KAAMyE,GACrDZ,EAASW,UAAUT,WAAYS,EAAWC,GAE1CuD,EAAU4C,mBAINjD,QAAQkD,IAAK,CAAE1C,EAAaT,IAElCxB,SAASsB,eAAgB,WAAYsD,SACrC5E,SAASC,KAAK4E,UAAU/B,IAAK,gBAE7BnG,IACAV,OAAOmF,iBAAkB,SAAUzE,GAEnC,MAAMmI,EAAM,IAAIC,EAAAC,IACVC,EAAWH,EAAII,UAAW,gBAChCD,EAASnC,IAAKrI,EAAQ,mBAAoB0K,UAAUC,IAEnDtL,EAAS+F,YAAcuF,EAAQxL,EAAAkG,sBAA8BlG,EAAAyL,cAC7DlL,EAAOwD,SAAS2H,aAAc,KAG/BL,EAASnC,IAAKrI,EAAQ,eAAgB0K,UAAUC,IAE/CnL,EAAWuB,YAAc4J,KAG1BH,EAASnC,IAAKrI,EAAQ,8BAA+B0K,UAAUC,IAE9DnL,EAAW0D,SAASgD,UAAW,cAAeC,OAAQwE,IACtDnL,EAAWkD,WAGZ8H,EAASnC,IAAKrI,EAAQ,QAAS,EAAG,EAAG,GAAI0K,UAAUC,IAElDnL,EAAWoC,MAAM6B,IAAKkH,EAAOA,MAG9BH,EAASnC,IAAKrI,EAAQ,kBAAmB,EAAG,GAAI,GAChDwK,EAASnC,IAAKrI,EAAQ,qBAAsB,EAAG,GAAI0K,UAAU,KAE5DlL,EAAWkD,WAGZ8H,EAASnC,IAAKrI,EAAQ,UAAW,EAAG,GAAI,GAAI0K,UAAU,KAErDlL,EAAWkD,WAGZ8H,EAASnC,IAAKrI,EAAQ,wBAAyB,EAAG,GAAI,GAAI0K,UAAUC,IAEnEnL,EAAW0D,SAASgD,UAAW,yBAA0ByE,GACzDnL,EAAWkD,WAGZ8H,EAASnC,IAAKrI,EAAQ,kBAAmB,GAAK,GAAI0K,UAAU,KAE3DxI,OAID,MAAM4I,EAAYT,EAAII,UAAW,eACjCK,EAAUzC,IAAKrI,EAAQ,uBAAwB,EAAG,IAAK0K,UAAU,KAEhElL,EAAWkD,WAGZoI,EAAUzC,IAAKrI,EAAQ,sBAAuB,EAAG,EAAI8E,KAAKiG,IAAKL,UAAUM,IAExExL,EAAW0D,SAASjC,oBAAoBgK,gBAAgB,IAAI9L,EAAA+L,SAAgBC,cAAeH,IAC3FxL,EAAWkD,WAGZoI,EAAUzC,IAAKrI,EAAQ,kBAAmB,EAAG,GAAI0K,UAAU,KAE1D3H,OAGD+H,EAAUzC,IAAKrI,EAAQ,iBAAkB,EAAG,GAAI0K,UAAU,KAEzDlL,EAAWkD,WAGZoI,EAAUzC,IAAKrI,EAAQ,kBAAmB,EAAG,GAAI0K,UAAU,KAE1DlL,EAAWkD,WAGZoI,EAAUzC,IAAKrI,EAAQ,4BAA6B0K,UAAUM,IAExDA,EAEJzF,SAASC,KAAK4E,UAAU/B,IAAK,gBAI7B9C,SAASC,KAAK4E,UAAUD,OAAQ,mBAMlC,MAAMiB,EAAef,EAAII,UAAW,UACpCW,EAAa/C,IAAK5I,EAAQ,gBAAiB,EAAG,KAAMiL,SAAU5H,GAC9DsI,EAAa/C,IAAK5I,EAAQ,iBAAkB,EAAG,GAAI,GAAIiL,UAAU,SAAWM,GAE3EvL,EAAO4L,eAAuB,IAANL,EAAU,EAAIlG,KAAKE,IAAKgG,EAAG,GACnDM,KAAKC,gBACLzI,OAGDsI,EAAa/C,IAAK5I,EAAQ,mBAAoB,EAAG,MAAOiL,SAAU5H,GAClEsI,EAAa/C,IAAK5I,EAAQ,kBAAmB,GAAK,IAAOiL,SAAU5H,GACnEsI,EAAa/C,IAAK5I,EAAQ,YAAa,EAAG,IAAKiL,SAAU5H,GAAQ0I,SACjEJ,EAAa/C,IAAK5I,EAAQ,QAAS,GAAK,IAAKiL,SAAU5H,GAAQ0I,SAC/DJ,EAAa/C,IAAK5I,EAAQ,MAAO,GAAI,KAAMiL,UAAU,KAEpDjL,EAAOoD,yBACPC,OAEG0I,SAEJ,MAAMC,EAAapB,EAAII,UAAW,kBAClCgB,EAAWC,SAAU1L,EAAOC,UAAW,SAAUyK,SAAU5H,GAC3D2I,EAAWC,SAAU1L,EAAOC,UAAW,YAAayK,SAAU5H,GAC9D2I,EAAWpD,IAAKrI,EAAOC,UAAW,oBAAqB,EAAK,GAAM,KAAOyK,SAAU5H,GACnF2I,EAAWpD,IAAKrI,EAAOC,UAAW,YAAa,EAAG,GAAIyK,SAAU5H,GAChE2I,EAAWpD,IAAKrI,EAAOC,UAAW,YAAa,EAAG,GAAIyK,SAAU5H,GAChE2I,EAAWpD,IAAKrI,EAAOC,UAAW,UAAW,EAAG,GAAIyK,SAAU5H,GAC9D2I,EAAWpD,IAAKrI,EAAOC,UAAW,eAAgB,EAAG,GAAIyK,SAAU5H,GACnE2I,EAAWpD,IAAKrI,EAAOC,UAAW,MAAO,GAAK,GAAMyK,SAAU5H,GAC9D2I,EAAWpD,IAAKrI,EAAOC,UAAW,SAAUyK,SAAU5H,GACtD2I,EAAWpD,IAAKrI,EAAOC,UAAW,cAAeyK,SAAU5H,GAC3D2I,EAAWE,QAEX,MAAMC,EAAavB,EAAII,UAAW,iBAClCmB,EAAWF,SAAU1L,EAAOY,UAAW,SAAU8J,SAAU5H,GAC3D8I,EAAWF,SAAU1L,EAAOY,UAAW,YAAa8J,SAAU5H,GAC9D8I,EAAWvD,IAAKrI,EAAOY,UAAW,oBAAqB,EAAK,GAAM,KAAO8J,SAAU5H,GACnF8I,EAAWvD,IAAKrI,EAAOY,UAAW,YAAa,EAAG,GAAI8J,SAAU5H,GAChE8I,EAAWvD,IAAKrI,EAAOY,UAAW,YAAa,EAAG,GAAI8J,SAAU5H,GAChE8I,EAAWvD,IAAKrI,EAAOY,UAAW,UAAW,EAAG,GAAI8J,SAAU5H,GAC9D8I,EAAWvD,IAAKrI,EAAOY,UAAW,eAAgB,EAAG,GAAI8J,SAAU5H,GACnE8I,EAAWvD,IAAKrI,EAAOY,UAAW,MAAO,GAAK,GAAM8J,SAAU5H,GAC9D8I,EAAWvD,IAAKrI,EAAOY,UAAW,SAAU8J,SAAU5H,GACtD8I,EAAWvD,IAAKrI,EAAOY,UAAW,cAAe8J,SAAU5H,GAC3D8I,EAAWD,QAEX,MAAME,EAAaxB,EAAII,UAAW,kBAClCoB,EAAWH,SAAU1L,EAAOa,UAAW,SAAU6J,SAAU5H,GAC3D+I,EAAWxD,IAAKrI,EAAOa,UAAW,YAAa,EAAG,GAAI6J,SAAU5H,GAChE+I,EAAWxD,IAAKrI,EAAOa,UAAW,YAAa,EAAG,GAAI6J,SAAU5H,GAChE+I,EAAWxD,IAAKrI,EAAOa,UAAW,SAAU6J,SAAU5H,GACtD+I,EAAWxD,IAAKrI,EAAOa,UAAW,cAAe6J,SAAU5H,GAC3D+I,EAAWF,QAEXrI,IA5RDwI","sources":["example/materialBall.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera, BlurredEnvMapGenerator } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\n\nlet renderer, controls, sceneInfo, ptRenderer, camera, fsQuad, materials;\nlet envMap, envMapGenerator, scene;\nlet samplesEl;\nconst params = {\n\n\tmaterial1: {\n\t\tcolor: '#ffc766',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.1,\n\t\tmetalness: 0.8,\n\t\tior: 1.495,\n\t\ttransmission: 0.0,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial2: {\n\t\tcolor: '#db7157',\n\t\temissive: '#000000',\n\t\temissiveIntensity: 1,\n\t\troughness: 0.8,\n\t\tmetalness: 0.1,\n\t\ttransmission: 0.0,\n\t\tior: 1.495,\n\t\topacity: 1.0,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\tmaterial3: {\n\t\tcolor: '#000000',\n\t\troughness: 0.01,\n\t\tmetalness: 0.05,\n\t\tmatte: false,\n\t\tcastShadow: true,\n\t},\n\n\tmultipleImportanceSampling: true,\n\tstableNoise: false,\n\tenvironmentIntensity: 3,\n\tenvironmentRotation: 0,\n\tenvironmentBlur: 0.0,\n\tbackgroundBlur: 0.05,\n\tbounces: 5,\n\tsamplesPerFrame: 1,\n\tacesToneMapping: true,\n\tresolutionScale: 1 / window.devicePixelRatio,\n\ttransparentTraversals: 20,\n\tfilterGlossyFactor: 0.5,\n\ttiles: 1,\n\tbackgroundAlpha: 1,\n\tcheckerboardTransparency: true,\n\n};\n\nif ( window.location.hash.includes( 'transmission' ) ) {\n\n\tparams.material1.metalness = 0.0;\n\tparams.material1.roughness = 0.05;\n\tparams.material1.transmission = 1.0;\n\tparams.material1.color = '#ffffff';\n\tparams.bounces = 10;\n\n}\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tparams.bounces = Math.max( params.bounces, 6 );\n\tparams.resolutionScale *= 0.5;\n\tparams.tiles = 2;\n\tparams.multipleImportanceSampling = false;\n\tparams.environmentBlur = 0.35;\n\n}\n\ninit();\n\nasync function init() {\n\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PhysicalCamera( 75, window.innerWidth / window.innerHeight, 0.025, 500 );\n\tcamera.position.set( - 4, 2, 3 );\n\n\tptRenderer = new PathTracingRenderer( renderer );\n\tptRenderer.alpha = true;\n\tptRenderer.camera = camera;\n\tptRenderer.material = new PhysicalPathTracingMaterial();\n\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', params.transparentTraversals );\n\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( params.multipleImportanceSampling ) );\n\tptRenderer.tiles.set( params.tiles, params.tiles );\n\n\tfsQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: ptRenderer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\n\tscene = new THREE.Scene();\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\tenvMapGenerator = new BlurredEnvMapGenerator( renderer );\n\n\tconst envMapPromise = new Promise( resolve => {\n\n\t\tnew RGBELoader()\n\t\t\t.load( 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr', texture => {\n\n\t\t\t\tenvMap = texture;\n\n\t\t\t\tupdateEnvBlur();\n\t\t\t\tresolve();\n\n\t\t\t} );\n\n\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb' )\n\t\t.then( gltf => {\n\n\t\t\tconst group = new THREE.Group();\n\n\t\t\tgltf.scene.scale.setScalar( 0.01 );\n\t\t\tgltf.scene.updateMatrixWorld();\n\t\t\tgroup.add( gltf.scene );\n\n\t\t\tconst box = new THREE.Box3();\n\t\t\tbox.setFromObject( gltf.scene );\n\n\t\t\tconst floor = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderBufferGeometry( 3, 3, 0.05, 200 ),\n\t\t\t\tnew THREE.MeshStandardMaterial( { color: 0xffffff, roughness: 0, metalness: 0.25 } ),\n\t\t\t);\n\t\t\tfloor.geometry = floor.geometry.toNonIndexed();\n\t\t\tfloor.geometry.clearGroups();\n\t\t\tfloor.position.y = box.min.y - 0.03;\n\t\t\tgroup.add( floor );\n\n\t\t\tconst material1 = new THREE.MeshStandardMaterial();\n\t\t\tconst material2 = new THREE.MeshStandardMaterial();\n\n\t\t\tgltf.scene.traverse( c => {\n\n\t\t\t\t// the vertex normals on the material ball are off...\n\t\t\t\t// TODO: precompute the vertex normals so they are correct on load\n\t\t\t\tif ( c.geometry ) {\n\n\t\t\t\t\tc.geometry.computeVertexNormals();\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'Sphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tc.material = material1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( c.name === 'subsphere_1' ) {\n\n\t\t\t\t\tc.material = material2;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tmaterials = [ material1, material2, floor.material ];\n\n\t\t\treturn generator.generate( group );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tsceneInfo = result;\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = ptRenderer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\tdocument.body.classList.add( 'checkerboard' );\n\n\tonResize();\n\twindow.addEventListener( 'resize', onResize );\n\n\tconst gui = new GUI();\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\n\tptFolder.add( params, 'acesToneMapping' ).onChange( value => {\n\n\t\trenderer.toneMapping = value ? THREE.ACESFilmicToneMapping : THREE.NoToneMapping;\n\t\tfsQuad.material.needsUpdate = true;\n\n\t} );\n\tptFolder.add( params, 'stableNoise' ).onChange( value => {\n\n\t\tptRenderer.stableNoise = value;\n\n\t} );\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'FEATURE_MIS', Number( value ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\n\n\t\tptRenderer.tiles.set( value, value );\n\n\t} );\n\tptFolder.add( params, 'samplesPerFrame', 1, 10, 1 );\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'transparentTraversals', 0, 40, 1 ).onChange( value => {\n\n\t\tptRenderer.material.setDefine( 'TRANSPARENT_TRAVERSALS', value );\n\t\tptRenderer.reset();\n\n\t} );\n\tptFolder.add( params, 'resolutionScale', 0.1, 1 ).onChange( () => {\n\n\t\tonResize();\n\n\t} );\n\n\tconst envFolder = gui.addFolder( 'Environment' );\n\tenvFolder.add( params, 'environmentIntensity', 0, 10 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( v => {\n\n\t\tptRenderer.material.environmentRotation.setFromMatrix4( new THREE.Matrix4().makeRotationY( v ) );\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'environmentBlur', 0, 1 ).onChange( () => {\n\n\t\tupdateEnvBlur();\n\n\t} );\n\tenvFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'backgroundAlpha', 0, 1 ).onChange( () => {\n\n\t\tptRenderer.reset();\n\n\t} );\n\tenvFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tdocument.body.classList.add( 'checkerboard' );\n\n\t\t} else {\n\n\t\t\tdocument.body.classList.remove( 'checkerboard' );\n\n\t\t}\n\n\t} );\n\n\tconst cameraFolder = gui.addFolder( 'Camera' );\n\tcameraFolder.add( camera, 'focusDistance', 1, 100 ).onChange( reset );\n\tcameraFolder.add( camera, 'apertureBlades', 0, 10, 1 ).onChange( function ( v ) {\n\n\t\tcamera.apertureBlades = v === 0 ? 0 : Math.max( v, 3 );\n\t\tthis.updateDisplay();\n\t\treset();\n\n\t} );\n\tcameraFolder.add( camera, 'apertureRotation', 0, 12.5 ).onChange( reset );\n\tcameraFolder.add( camera, 'anamorphicRatio', 0.1, 10.0 ).onChange( reset );\n\tcameraFolder.add( camera, 'bokehSize', 0, 50 ).onChange( reset ).listen();\n\tcameraFolder.add( camera, 'fStop', 0.3, 20 ).onChange( reset ).listen();\n\tcameraFolder.add( camera, 'fov', 25, 100 ).onChange( () => {\n\n\t\tcamera.updateProjectionMatrix();\n\t\treset();\n\n\t} ).listen();\n\n\tconst matFolder1 = gui.addFolder( 'Shell Material' );\n\tmatFolder1.addColor( params.material1, 'color' ).onChange( reset );\n\tmatFolder1.addColor( params.material1, 'emissive' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder1.add( params.material1, 'matte' ).onChange( reset );\n\tmatFolder1.add( params.material1, 'castShadow' ).onChange( reset );\n\tmatFolder1.close();\n\n\tconst matFolder2 = gui.addFolder( 'Ball Material' );\n\tmatFolder2.addColor( params.material2, 'color' ).onChange( reset );\n\tmatFolder2.addColor( params.material2, 'emissive' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'opacity', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'transmission', 0, 1 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'ior', 0.9, 3.0 ).onChange( reset );\n\tmatFolder2.add( params.material2, 'matte' ).onChange( reset );\n\tmatFolder2.add( params.material2, 'castShadow' ).onChange( reset );\n\tmatFolder2.close();\n\n\tconst matFolder3 = gui.addFolder( 'Floor Material' );\n\tmatFolder3.addColor( params.material3, 'color' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'roughness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'metalness', 0, 1 ).onChange( reset );\n\tmatFolder3.add( params.material3, 'matte' ).onChange( reset );\n\tmatFolder3.add( params.material3, 'castShadow' ).onChange( reset );\n\tmatFolder3.close();\n\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = params.resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tptRenderer.setSize( w * scale * dpr, h * scale * dpr );\n\tptRenderer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\tcamera.aspect = w / h;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction reset() {\n\n\tptRenderer.reset();\n\n}\n\nfunction updateEnvBlur() {\n\n\tconst blurredTex = envMapGenerator.generate( envMap, params.environmentBlur );\n\tptRenderer.material.envMapInfo.updateFrom( blurredTex );\n\tscene.environment = blurredTex;\n\tptRenderer.reset();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tconst m1 = materials[ 0 ];\n\tm1.color.set( params.material1.color ).convertSRGBToLinear();\n\tm1.emissive.set( params.material1.emissive ).convertSRGBToLinear();\n\tm1.emissiveIntensity = params.material1.emissiveIntensity;\n\tm1.metalness = params.material1.metalness;\n\tm1.roughness = params.material1.roughness;\n\tm1.transmission = params.material1.transmission;\n\tm1.ior = params.material1.ior;\n\tm1.opacity = params.material1.opacity;\n\n\tconst m2 = materials[ 1 ];\n\tm2.color.set( params.material2.color ).convertSRGBToLinear();\n\tm2.emissive.set( params.material2.emissive ).convertSRGBToLinear();\n\tm2.emissiveIntensity = params.material2.emissiveIntensity;\n\tm2.metalness = params.material2.metalness;\n\tm2.roughness = params.material2.roughness;\n\tm2.transmission = params.material2.transmission;\n\tm2.ior = params.material2.ior;\n\tm2.opacity = params.material2.opacity;\n\n\tconst m3 = materials[ 2 ];\n\tm3.color.set( params.material3.color ).convertSRGBToLinear();\n\tm3.metalness = params.material3.metalness;\n\tm3.roughness = params.material3.roughness;\n\n\tptRenderer.material.materials.updateFrom( sceneInfo.materials, sceneInfo.textures );\n\tptRenderer.material.materials.setMatte( 0, params.material1.matte );\n\tptRenderer.material.materials.setMatte( 1, params.material2.matte );\n\tptRenderer.material.materials.setMatte( 2, params.material3.matte );\n\tptRenderer.material.materials.setCastShadow( 0, params.material1.castShadow );\n\tptRenderer.material.materials.setCastShadow( 1, params.material2.castShadow );\n\tptRenderer.material.materials.setCastShadow( 2, params.material3.castShadow );\n\n\tptRenderer.material.filterGlossyFactor = params.filterGlossyFactor;\n\tptRenderer.material.environmentIntensity = params.environmentIntensity;\n\tptRenderer.material.backgroundBlur = params.backgroundBlur;\n\tptRenderer.material.bounces = params.bounces;\n\tptRenderer.material.backgroundAlpha = params.backgroundAlpha;\n\tptRenderer.material.physicalCamera.updateFrom( camera );\n\n\tcamera.updateMatrixWorld();\n\n\tif ( params.backgroundAlpha < 1.0 ) {\n\n\t\tscene.background = null;\n\n\t} else {\n\n\t\tscene.background = scene.environment;\n\n\t}\n\n\tfor ( let i = 0, l = params.samplesPerFrame; i < l; i ++ ) {\n\n\t\tptRenderer.update();\n\n\t}\n\n\tif ( ptRenderer.samples < 1 ) {\n\n\t\trenderer.render( scene, camera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tfsQuad.material.map = ptRenderer.target.texture;\n\tfsQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( ptRenderer.samples ) }`;\n\n}\n\n\n\n\n"],"names":["$ilwiq","parcelRequire","$0473c5c83fd2a77a$var$renderer","$0473c5c83fd2a77a$var$controls","$0473c5c83fd2a77a$var$sceneInfo","$0473c5c83fd2a77a$var$ptRenderer","$0473c5c83fd2a77a$var$camera","$0473c5c83fd2a77a$var$fsQuad","$0473c5c83fd2a77a$var$materials","$0473c5c83fd2a77a$var$envMap","$0473c5c83fd2a77a$var$envMapGenerator","$0473c5c83fd2a77a$var$scene","$0473c5c83fd2a77a$var$samplesEl","$0473c5c83fd2a77a$var$params","material1","color","emissive","emissiveIntensity","roughness","metalness","ior","transmission","opacity","matte","castShadow","material2","material3","multipleImportanceSampling","stableNoise","environmentIntensity","environmentRotation","environmentBlur","backgroundBlur","bounces","samplesPerFrame","acesToneMapping","resolutionScale","window","devicePixelRatio","transparentTraversals","filterGlossyFactor","tiles","backgroundAlpha","checkerboardTransparency","location","hash","includes","$0473c5c83fd2a77a$var$onResize","w","innerWidth","h","innerHeight","scale","dpr","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","$0473c5c83fd2a77a$var$reset","$0473c5c83fd2a77a$var$updateEnvBlur","blurredTex","generate","material","envMapInfo","updateFrom","environment","$0473c5c83fd2a77a$var$animate","requestAnimationFrame","m1","set","convertSRGBToLinear","m2","m3","materials","textures","setMatte","setCastShadow","physicalCamera","updateMatrixWorld","background","i","l","update","samples","render","autoClear","map","target","texture","innerText","Math","floor","max","async","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","setClearColor","document","body","appendChild","domElement","$4CEV9","PhysicalCamera","position","PathTracingRenderer","alpha","camera","PhysicalPathTracingMaterial","setDefine","Number","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","$5Rd1x","OrbitControls","addEventListener","Scene","getElementById","BlurredEnvMapGenerator","envMapPromise","Promise","resolve","$891vQ","RGBELoader","load","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","setMeshoptDecoder","$kp7Te","MeshoptDecoder","loadAsync","then","gltf","group","Group","scene","setScalar","add","box","Box3","setFromObject","Mesh","CylinderBufferGeometry","MeshStandardMaterial","geometry","toNonIndexed","clearGroups","y","min","traverse","c","computeVertexNormals","name","result","bvh","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","all","remove","classList","gui","$jiuw3","GUI","ptFolder","addFolder","onChange","value","NoToneMapping","needsUpdate","envFolder","PI","v","setFromMatrix4","Matrix4","makeRotationY","cameraFolder","apertureBlades","this","updateDisplay","listen","matFolder1","addColor","close","matFolder2","matFolder3","$0473c5c83fd2a77a$var$init"],"version":3,"file":"materialBall.2d30a0c5.js.map"}